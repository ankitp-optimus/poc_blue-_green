trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageName: 'pocbluegreendeployment'
  acrName: 'bluegreendeployment'  # Without .azurecr.io
  azureSubscriptionEndpoint: 'Ankit_Service_Connection'
  containerAppName: 'poc-bluegreen-app'
  resourceGroup: 'RG_Ankit_Pathak'
  environmentName: 'aca-env'

stages:
# ------------- BUILD AND PUSH STAGE ----------------
- stage: Build
  displayName: Build and Push
  jobs:
  - job: BuildAndPush
    displayName: Docker Build and Push
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        echo "Cloning repository..."
        git clone https://github.com/ankitp-optimus/poc_blue-_green.git src
        ls -la src/
        find src/ -name "dockerfile" -o -name "Dockerfile"
      displayName: Clone and Verify Structure

    - task: AzureCLI@2
      displayName: Login to Azure and ACR
      inputs:
        azureSubscription: $(azureSubscriptionEndpoint)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name $(acrName)

    - script: |
        cd src
        docker build -t $(acrName).azurecr.io/$(imageName):$(tag) -f DockerFile .
      displayName: Docker Build

    - script: |
        docker push $(acrName).azurecr.io/$(imageName):$(tag)
      displayName: Docker Push

# ------------- DEPLOY GREEN REVISION STAGE ----------------
- stage: DeployGreen
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy Green Revision
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscriptionEndpoint)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az containerapp update --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --image $(acrName).azurecr.io/$(imageName):$(tag) \
            --revision-suffix $(tag)

          az containerapp revision label add --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --label green \
            --revision $(containerAppName)--$(tag)

# ------------- TEST GREEN REVISION STAGE ----------------
- stage: TestGreen
  dependsOn: DeployGreen
  jobs:
  - job: Test
    displayName: Test Green Revision
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscriptionEndpoint)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          DOMAIN=$(az containerapp env show -g $(resourceGroup) -n $(environmentName) --query properties.defaultDomain -o tsv)
          GREEN_URL="https://$(containerAppName)---green.$DOMAIN"

          echo "Hitting $GREEN_URL"
          curl -s $GREEN_URL | grep "$(tag)"
      displayName: Smoke Test Green Revision

# ------------- SWITCH TRAFFIC STAGE ----------------
- stage: SwitchTraffic
  dependsOn: TestGreen
  condition: succeeded()
  jobs:
  - job: Shift
    displayName: Shift Traffic to Green
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscriptionEndpoint)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az containerapp ingress traffic set \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --label-weight blue=0 green=100
